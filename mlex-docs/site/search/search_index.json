{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MLEX","text":"<p>MLEX is a tool for designing and executing machine learning experiments. It is built on top of PyTorch, and experiments are defined in .yaml config files. This allots more time to focus on designing and evaluating ML models, rather than spending time on boilerplate code.</p> <p>Additionally, MLEX simplifies distributed training and visualization of experiment results.</p> <p>Inspired by GLIPv2.</p>"},{"location":"#commands","title":"Commands","text":"<p>TODO</p> <p>none yet!</p>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>\u251c\u2500\u2500 configs\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 pretrain\n\u251c\u2500\u2500 docs\n\u251c\u2500\u2500 general\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 config\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 remove\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 data\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 datasets\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 evaluation\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 ...\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 samplers\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 transforms\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 engine\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 losses\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 models\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 backbone\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 discriminator\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 head\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 box\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 lang\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 layers\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 rpn\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 solver\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 structures\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 tools\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 utils\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 logger\n</code></pre>"},{"location":"install/","title":"Installation","text":"<pre><code>git clone 'https://github.com/mhyatt000/vision'\ncd vision\npip install -r requirements.txt\npip install -e .\n</code></pre>"},{"location":"todo/","title":"TODO","text":"<p>This package is a work in progress. Here is what's on the TODO list:</p> <p>TODO</p> <p>cant use more GPUs than classes for arc loss</p> <p>TODO</p> <p>add jobs module for job scheduling read jobs folder</p> <pre><code>mlex job add &lt;name&gt;     # add experiment &lt;name&gt; to the job list\nmlex job del &lt;name&gt;     # remove experiment &lt;name&gt; from the job list\nmlex job run            # run all pending jobs, then remove them from the list\n</code></pre>"},{"location":"usage/","title":"Usage","text":"<p>To use run:</p> <pre><code>./run.sh &lt;experiment_name&gt;\n</code></pre> <p>or </p> <pre><code>torchrun &lt;your_torchrun_options&gt; general/master.py &lt;experiment_name&gt;\n</code></pre>"},{"location":"usage/#experiment-config","title":"Experiment Config","text":"<p>See <code>MLEX/config</code> on defining an experiment config file. Place the file into the <code>configs</code> folder before running the experiment.</p>"},{"location":"usage/#experiment-results","title":"Experiment Results","text":"<p>Experiment results will be placed into <code>experiments/&lt;name&gt;</code>. Results include related figures, logs, and model weights.</p>"},{"location":"mlex/config/","title":"Config","text":"<p>MLEX config files are defined in YAML. They are an easy way to document and finetune experiments without excessive modification of the code. The config module uses YACS to read config files and apply their specification ontop of the default values. </p> <p>The supported configurations and their default values are specified below: </p>"},{"location":"mlex/config/#basic-configurations","title":"Basic Configurations","text":""},{"location":"mlex/config/#model","title":"Model","text":""},{"location":"mlex/config/#solver","title":"Solver","text":""},{"location":"mlex/config/#loss","title":"Loss","text":""},{"location":"mlex/config/#data","title":"Data","text":"<p>TODO docs</p> <p>add others</p>"},{"location":"mlex/data/","title":"Data","text":"<p>TODO docs</p> <p>add something here aboud how the data loader works update when you modify for distributed loading with sync and multi-worker</p>"},{"location":"mlex/data/#supported-datasets","title":"Supported Datasets","text":"<ul> <li>WBLOT</li> </ul>"},{"location":"mlex/general/","title":"General","text":""},{"location":"mlex/overview/","title":"Overview","text":"<p>The packages is organized as follows: </p> <pre><code>\u251c\u2500\u2500 config      # reads configuration files and integrates specs with project \n\u251c\u2500\u2500 data        # distributed data loading and augmentation\n\u251c\u2500\u2500 engine      # -- nothing yet --\n\u251c\u2500\u2500 helpers     # abstracts the connection between MLEX objects\n|               # manages model loading, saving, evaluation\n\u251c\u2500\u2500 losses      # defines loss functions \n\u251c\u2500\u2500 models      # builds model architecture\n\u251c\u2500\u2500 solver      # defines optimization process and training regime\n\u251c\u2500\u2500 structures  # -- idk --\n\u251c\u2500\u2500 tools       # miscelaneous tools\n\u251c\u2500\u2500 utils       # miscelaneous utility modules\n\u2514\u2500\u2500 logger      # logging\n</code></pre>"},{"location":"mlex/general/helpers/","title":"Helpers","text":""}]}